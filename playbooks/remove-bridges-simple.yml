
---
  - name: Setup Bridge on Host
    hosts: all
    become: yes
    tasks:
      - name: Install needed network manager libs for RHEL 7
        ansible.builtin.package:
          name:
            - NetworkManager-libnm
            - nm-connection-editor
            - libsemanage-python
            - policycoreutils-python
          state: present
        when: ansible_facts['distribution'] == "Red Hat" and ansible_facts['distribution_major_version'] == "7" 

      - name: Install needed network manager libs for Fedora 35
        ansible.builtin.package:
          name:
            - NetworkManager-libnm
            - nm-connection-editor
            - python3-libsemanage
            - policycoreutils-python-utils
          state: present
        when: ansible_facts['distribution'] == "Fedora" and ansible_facts['distribution_major_version'] == "35" 






      - name: Remove Bridge Interfaces
        nmcli:
          conn_name: "{{ item.brname }}"
          state: absent
        when: ansible_hostname == "{{ item.hostname }}"
        with_items: "{{ new_bridge_configs }}"

      - name: Remove Bound Interfaces
        nmcli:
          conn_name: "{{ item.ifname }}"
          state: absent
        when: ansible_hostname == "{{ item.hostname }}"
        with_items: "{{ new_bridge_binds }}"




      - name: Re-Create Original Ethernet Interfaces
        nmcli:
          conn_name: "{{ item.ifname }}"
          ifname: "{{ item.ifname }}"
          ip4: "{{ item.ip4  }}"
          gw4: "{{ item.gw4 }}"
          dns4: "{{ item.dns4 }}"
          dns4_search: "{{ item.dns4_search }}"
          state: present
        with_items: "{{ new_bridge_binds }}"

#      - name: Revert bound interfaces to typical ethernet Vlan Interfaces to Bridges
#        command: "echo nmcli conn modify {{ item.ifname }} connection.master none connection.slave-type ''"
#        when: ansible_hostname == "{{ item.hostname }}"
#        with_items: "{{ new_bridge_binds }}"




#      - name: Re-up Vlan Interfaces
#        command: "nmcli conn up {{ item.brname }}"
#        when: ansible_hostname == "{{ item.hostname }}"
#        with_items: "{{ new_bridge_configs }}"
#    #- name: Set umask appropriately

